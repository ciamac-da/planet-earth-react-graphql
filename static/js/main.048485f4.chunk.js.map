{"version":3,"sources":["graphql/get-spaceX.js","components/SpaceX.js","containers/SpaceXContainer.js","containers/App.js","index.js"],"names":["GET_SPACEX","gql","SpaceX","users","className","id","name","rocket","SpaceXContainer","useQuery","variables","limit","data","map","console","log","App","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"kNAGaA,EAAaC,YAAH,mJ,QCDhB,SAASC,EAAT,GAA0B,IAATC,EAAQ,EAARA,MACpB,OACJ,sBAAKC,UAAU,QAAf,UACA,sBAAKA,UAAU,UAAf,kBAA8B,4BAAID,EAAME,KAAxC,OACA,sBAAKD,UAAU,YAAf,gBAA8B,4BAAID,EAAMG,OAAxC,OACA,sBAAKF,UAAU,cAAf,cAA8B,4BAAID,EAAMI,SAAxC,UCFO,IAAMC,EAAkB,WAAM,IAAD,EACGC,mBAAST,EAAW,CACtDU,UAAW,CAAEC,MAAO,MADhBC,KAD2B,gBACL,GADK,GACnBT,aADmB,MACX,GADW,EAInC,OACI,qBAAKC,UAAU,SAAf,SACKD,GAASA,EAAMU,KAAI,SAAAV,GAErB,OADCW,QAAQC,IAAIZ,GACL,cAACD,EAAD,CAAwBC,MAAOA,GAAlBA,EAAME,UCOpBW,MAhBf,WACE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,qCAGP,OACE,cAAC,iBAAD,CAAgBF,OAAQA,EAAxB,SAEA,iCACC,gDACC,cAAC,EAAD,UCVNG,IAASC,OACL,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.048485f4.chunk.js","sourcesContent":["import gql from \"graphql-tag\"\n\n\nexport const GET_SPACEX = gql`\nquery users($limit: Int!) {\n     users(limit: $limit){\n         id\n         name\n         rocket\n     }\n    }\n  `","import  React  from 'react';\n\nexport function SpaceX({users}) {\n    return(\n<div className=\"users\">\n<div className=\"usersId\">     <p>{users.id}</p> </div>\n<div className=\"usersName\">   <p>{users.name}</p> </div>\n<div className=\"usersRocket\"> <p>{users.rocket}</p> </div>\n</div>\n    )\n}","import React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_SPACEX } from '../graphql/get-spaceX';\nimport { SpaceX } from \"../components/SpaceX\";\n\nexport const SpaceXContainer = () =>{\n const { data: { users = []} = {}  } = useQuery(GET_SPACEX,{\n     variables: { limit: 20}\n });\n return(\n     <div className=\"SpaceX\">\n         {users && users.map(users => {\n         console.log(users)\n        return  <SpaceX key={users.id}  users={users} />\n     //   return  <li key={users.id}>{users.name}</li>\n     //   return JSON.stringify(users, null, 2)\n\n         }\n         )}\n     </div>\n )\n}","import React, { Component }  from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { SpaceXContainer } from './SpaceXContainer';\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://api.spacex.land/graphql/'\n  });\n\n  return (\n    <ApolloProvider client={client}>\n\n    <main>\n     <h1>hi, I'm a User</h1>\n      <SpaceXContainer />\n    </main>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App.js';\n\nReactDOM.render(\n    <App />,document.getElementById('root'));\n"],"sourceRoot":""}